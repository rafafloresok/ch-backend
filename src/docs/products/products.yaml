paths:
  /api/products/:
    get:
      tags:
        - Products
      summary: Get paginated products according to the request query 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: request result
                    example: success
                  result:
                    $ref: "#components/schemas/paginatedProducts"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: request result
                    example: error
                  error:
                    type: string
                    description: error description
                    example: error trying to get products

    post:
      tags:
        - Products
      summary: Create a new product
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: request result
                    example: success
                  result:
                    type: string
                    description: result description
                    example: Product added successfully
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: request result
                    example: error
                  error:
                    type: string
                    description: error description
                    example: Code already exists
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: request result
                    example: error
                  error:
                    type: string
                    description: error description
                    example: error trying to add product 

components:
  schemas:
    product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID generated by MongoDB Atlas
        owner:
          type: string
          description: creator user id or admin if created by admin
        code:
          type: string
          description: unique product code
        title:
          type: string
          description: product name
        description:
          type: string
          description: product description
        price:
          type: number
          description: product price
        status:
          type: boolean
          description: indicates wheter te product is available (true) or not (false)
        stock:
          type: number
          description: product quantity available for sale
        category:
          type: string
          description: product category
        thumbnails:
          type: array
          description: product images paths strings
      example:
        _id: 640f7953079c90d4dbf69cd9
        owner: admin
        code: WF8c3
        title: MFB Desktop Computer
        description: MFB Desktop Computer is designed to keeping in mind durability
        price: 583.00
        status: true
        stock: 15
        category: Computers
        thumbnails: ["thumb_1.jpg", "thumb_2.jpg"]

    paginatedProducts:
      type: object
      properties:
        docs:
          type: array
          description: List of products
          items:
            $ref: "#components/schemas/product"
        totalDocs:
          type: number
          description: Total number of products in collection that match a query
          example: 100
        limit:
          type: number
          description: Limit that was used
          example: 1
        totalPages:
          type: number
          description: Total number of pages
          example: 100
        page:
          type: number
          description: Current page number
          example: 1
        pagingCounter:
          type: number
          description: The starting index/serial/chronological number of first document in current page. (Eg. if page=2 and limit=10, then pagingCounter will be 11)
          example: 1
        hasPrevPage:
          type: boolean
          description: Availability of prev page
          example: false
        hasNextPage:
          type: boolean
          description: Availability of next page
          example: true
        prevPage:
          type: number
          description: Previous page number if available or NULL
          example: NULL
        nextPage:
          type: number
          description: Next page number if available or NULL
          example: 2

    cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID generated by MongoDB Atlas
        alias:
          type: string
          description: cart name given by owner user
        products:
          type: array
          description: cart content
          items:
            type: object
            properties:
              productId:
                $ref: "#components/schemas/product"
              quantity:
                type: number
                description: product quantity in cart

  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre de usurio
        last_name:
          type: string
          description: Apellido
        email:
          type: string
          description: Correo del usuario
        password:
          type: string
          description: Contrase√±a del usuario
      example:
        first_name: Diego
        last_name: Polverelli
        email: diego@hotmail.com
        password: coder123  